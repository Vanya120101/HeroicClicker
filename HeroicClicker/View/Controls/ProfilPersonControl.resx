<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AvatarBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAwtJREFUaEPt
        2UvoTGEYx/FxJ7ESQiKSWxJiQcjCLZfIZUFshRJlIxu3naWVUkqURMTOws4aud92FhLJJaHw/c1/nn/H
        eZ93bs2Zc6bOrz51zjvPe2bmzHnfeedMpUyZMmXKlOlgJuM6PuBvQem13cB0uNGb+ASvcxF9xCQE0Sfh
        dSiyawjyBV5xkX1GEK+wFwTxinpBEK+oFwTxiuq5haUYi4k4B68ua0G8opg7GIB0JuAevD5ZCeIVxaxB
        LAvg9clKEK8oZhpiGQevj1mJVrMK3rEkiFcUswixaOng9THL0GqWwzuWBPGKYvYglm3w+mQliFcUsxix
        1Dt7WQjiFcXMRizz4fXJShCvKOYuYrkPr48p1GCXJUhHL9KrTSrUYJd3GA+Ltt/Dq81SEK+okYWwaNur
        yVoQr6ieX5gCy1T8hlebpSBeUcwDrEU66/EQXh9TiMF+Gxp4jbICWlh6x8h1sH/DRrSazfgO75idEsQr
        MkfQbo7CO2anBPGKjG4VtRtNCN4xYx7jMOZgTM1c6GQ+Qbo+SLqg2zQLHsQgxKLHDkG11i9I8qDd9hOr
        0Ww0Y9qbCfqlD95N+9BMRmB332blANT3Ff77FL8i/QTdoDFR73Ky6B7BVajPcajP09r+VvTnJpJP0C26
        5pvJWahe6zn7qa0JQG2Xqnu1zEQeN7FnoVH2Q7X6Tkr+qNNspvbX1b1E7G+Fbt4HHgXLGczr2+yPljSa
        DP5glxoSGQ0dQ8Mit9iYHFndq1R2QPs663vVQGZAfx+o/ZgaUtFJ0GM68bnlBfQi7NLS2bXBLBegGUnb
        5+FFX5p6/Hl1L6dcgV5EerDrDo3WdvaG9O/UQHixwX65updT7FLSsmOwGhLRxPMI+v2v7w4v6vMMOsZ2
        NeSVobBLR2urdHSp6a5lLLYYfYkhasgzm6DZSMuNeveT01kH/RpV3w1qKEJOQme2nUXjCRQmWnqchl6Y
        2DJeNwGH12h2Si7j9UmcgvfXRu7Reukt7A3FvMEWFDrDsBMXobP/o0bbatNjmiRSqVT+AQ66zTVZKKFH
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>